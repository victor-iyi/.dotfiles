# Rust package manager - cargo
source "$HOME/.cargo/env"

# Hombrew
export HOMEBREW_CASK_OPTS="--no-quarantine"

# Syntax highlighting for man pages using bat
# export MANPAGER="sh -c 'col -bx | bat -l man -p'"
# export BAT_PAGER="less -RF"
# Use bat for (instead of default cat) null commands.
export NULLCMD=bat

# C++ Flags.
CPPFLAGS="-I/opt/homebrew/opt/openjdk/include"
CPPFLAGS+="-I/opt/homebrew/opt/libpq/include"
export CPPFLAGS

# Linker Flags.
LIBRARY_PATH="$LIBRARY_PATH:/opt/homebrew/lib:/opt/homebrew/opt/libpq/lib"
export LIBRARY_PATH
# LDFLAGS="-L/opt/homebrew/opt/libpq/lib"
# export LDFLAGS
# Rust flags.
# export RUSTFLAGS="/opt/homebrew/opt/libpq/include"

# OS can't find libclang.dylib
export DYLD_FALLBACK_LIBRARY_PATH="$(xcode-select --print-path)/usr/lib/"
# OR use XCode:
export DYLD_FALLBACK_LIBRARY_PATH="$(xcode-select --print-path)/Toolchains/XcodeDefault.xctoolchain/usr/lib/"

# LibTorch: PyTorch
export LIBTORCH="/opt/homebrew/Cellar/pytorch/1.13.1/"
export LD_LIBRARY_PATH=${LIBTORCH}/lib:$LD_LIBRARY_PATH

# # LIBTORCH_INCLUDE must contains `include` directory.
# export LIBTORCH_INCLUDE="$HOME/Downloads/libtorch"
# # LIBTORCH_LIB must contains `lib` directory.
# export LIBTORCH_LIB="$HOME/Downloads/libtorh"

# Virtualenv wrapper
export VIRTUALENVWRAPPER_PYTHON=/usr/local/bin/python3

# Google Cloud Credentials
# GOOGLE_APPLICATION_CREDENTIALS="$HOME/.config/gcloud/legacy_credentials/vafolabi@lotlinx.com/dev-lotlinx-ml-8d85701510af.json"
# export GOOGLE_APPLICATION_CREDENTIALS
# export CLOUDSDK_PYTHON=python3

# History management
export HISTCONTROL=ignoreboth
export HISTSIZE=5000
export HISTIGNORE="clear:cd:cd ~:cd ..:* --help:ls:ls -la:ll:ls -lhs"
