# Inserts a blank line between shell prompts
# add_newline = true

# The default `format` is used to define the format of the prompt, if empty no
# `format` is provided. The default is `format = "$all"`.
 format = "$all"

[conda]
format = "[$symbol$environment](dimmed green) "

[docker_context]
format = "via [🐋 $context](blue bold)"

[gcloud]
format = 'on [$symbol$account(@$domain)(\($project\))]($style) '
style = "bold yellow"

[git_branch]
symbol = "🌱 "
truncation_length = 4
truncation_symbol = ""

[git_commit]
commit_hash_length = 4
tag_symbol = "🔖 "

[git_state]
format = '[\($state( $progress_current of $progress_total)\)]($style) '
cherry_pick = "[🍒 PICKING](bold red)"

[git_status]
conflicted = "🏳"
# ahead = "🏎💨"
# behind = "😰"
# diverged = "😵"
up_to_date = "✓"
untracked = "🤷‍"
stashed = "📦"
modified = "📝"
staged = '[++\($count\)](green)'
renamed = "👅"
deleted = "🗑"
ahead = "⇡${count}"
diverged = "⇕⇡${ahead_count}⇣${behind_count}"
behind = "⇣${count}"


[golang]
format = "via [🏎💨 $version](bold cyan) "


[python]
symbol = "🐍 "
pyenv_version_name = true

# Don't trigger for files with the py extension
detect_extensions = []

# Display the version of python from inside a local venv.
#
# Note this will only work when the venv is inside the project and it will only
# work in the directory that contains the venv dir but maybe this is ok?
python_binary = ["./venv/bin/python", "python", "python3", "~/miniforge3/bin/python"]


[rust]
format = "via [⚙️ $version](red bold)"
